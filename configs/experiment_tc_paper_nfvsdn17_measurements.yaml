---
# This is an example configuration for a single experiment.
name: "TC Paper Experiment: NFVSDN'17 measurement-based model."
author: "Manuel Peuster"
version: 0.1

# time limit for measurement (s) (expandable)
max_time_t: null
repetitions: 30
# path to write results as pickled Pandas DF 
result_path: "out/experiment_tc_paper_nfvsdn17_measurements.pkl"
result_path_add_timestamp: False

pmodels:
    - name: NFVSDN17ExperimentMeasurements
      n_model_instances: 10
      topologies: ["nx-sc-sq", "sc-sq-nx", "sq-nx-sc", "nx-sc-sq-phys-isolated", "sc-sq-nx-phys-isolated", "sq-nx-sc-phys-isolated"]
      raw_data_path: "analysis/data/peuster_karl_ieeenfvsdn17_3vnf_sfc_profile.pkl"

# PANIC Paper: 135 configs * 0.2 (sampling rate) = 27
# max_samples: {min: 5, max: 27, step: 1}
# 90 = sqrt(8000)
selector:
    - name: UniformRandomSelector
      # max. no. of samples to be selected (expandable)
      max_samples: {min: 2, max: 18, step: 2}
    - name: PanicGreedyAdaptiveSelector
      # max. no. of samples to be selected (expandable)
      max_samples: {min: 2, max: 18, step: 2}
      max_border_points: 10  # PANIC: 2^d * 5 (5 ~ sqrt(20) lots of possible values)
    - name: PanicGreedyAdaptiveSelector
      # max. no. of samples to be selected (expandable)
      max_samples: {min: 2, max: 18, step: 2}
      max_border_points: 18  # PANIC: 2^d * 5 (5 ~ sqrt(20) lots of possible values)
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 2  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 4  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 0  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 4  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 1  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 4  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 2  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 8  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 0  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 8  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 1  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 8  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 2  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 16  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 0  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 16  # number of samples before switching to VNF with smaller weight
    - name: WeightedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 1  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
      p_samples_per_vnf: 16  # number of samples before switching to VNF with smaller weight
    - name: WeightedRandomizedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 2  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
    - name: WeightedRandomizedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 0  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
    - name: WeightedRandomizedVnfSelector
      max_samples: {min: 2, max: 18, step: 2}
      border_point_mode: 1  # 0 = max, 1 = min, 2 = both
      border_point_mode_panic: False
      sampling_mode_maxmin: 2 # 0 = max, 1 = min, 2 = median
    

predictor:
    #- name: PolynomialRegressionPredictor
    #  degree: [2, 3]  # (expandable)
    - name: SVRPredictorRbfKernel
      epsilon: [0.1]  # (expandable)
    - name: SVRPredictorLinearKernel
      epsilon: [0.1]  # (expandable)
    #- name: SVRPredictorPolyKernel
    #  epsilon: [0.1]  # (expandable)
    - name: DecisionTreeRegressionPredictor
      max_tree_depth: 5
    - name: LassoRegressionPredictor
      alpha: .1
    #- name: LassoLARSRegressionPredictor
    #  alpha: .1
    #- name: ElasticNetRegressionPredictor
    #  alpha: .1
    - name: RidgeRegressionPredictor
      alpha: .1
    - name: SGDRegressionPredictor
      alpha: .1

error_metrics:
    - name: MSE
    - name: RMSD
    - name: NRMSDMean
    - name: NRMSDRange
    #- name: MAE
    #- name: R2
    #- name: EVS
    #- name: MEDAE

plot:
    - name: Boxplot
      disabled: True
      path: plots
      title: Error
      x: k_samples
      y: error_value
      y_lim_min: -2.0
      y_lim_max: 2.0
      n_plots:
        # list of columns that distinguish plots
        - selector
        - predictor
        - degree
        - epsilon
        - error
        #- pmodel
        - topology
    - name: Lineplot
      disabled: False
      path: plots
      title: Selector Error Comparison
      x: k_samples
      y: error_value
      #y_lim_min: -1.0
      #y_lim_max: 1.0
      # column that distinguishes lines in plot
      hue: selector_conf
      error_bars: 95  # ="sd" or =95 (for ci)
      n_plots:
        # list of columns that distinguish plots
        - predictor
        - degree
        - epsilon
        - error
        #- topology
        #- pmodel
    - name: Lineplot
      disabled: False
      # needs fixed argument values for predictors!
      path: plots
      title: Predictor Error Comparison
      x: k_samples
      y: error_value
      #y_lim_min: -1.0
      #y_lim_max: 1.0
      # column that distinguishes lines in plot
      hue: predictor_conf
      error_bars: 95  # ="sd" or =95 (for ci)
      n_plots:
        # list of columns that distinguish plots
        - selector
        - error
        #- topology
        #- pmodel
